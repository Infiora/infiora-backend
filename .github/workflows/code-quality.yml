name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_call:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Run Black (code formatting check)
        run: |
          echo "üñ§ Checking code formatting with Black..."
          black --check --diff src/

      - name: Run isort (import sorting check)
        run: |
          echo "üî¢ Checking import sorting with isort..."
          isort --check-only --diff src/

      - name: Run Flake8 (linting)
        run: |
          echo "üîç Running linting with Flake8..."
          flake8 src/

      - name: Run Bandit (security check)
        run: |
          echo "üîí Running security checks with Bandit..."
          bandit -r src/ -f json -o bandit-report.json || true
          bandit -r src/

      - name: Run MyPy (type checking)
        run: |
          echo "üè∑Ô∏è Running type checking with MyPy..."
          mypy src/

      - name: Run Django checks
        run: |
          echo "üîß Running Django system checks..."
          cd src
          python manage.py check --settings=core.settings.test

      - name: Check for missing migrations
        run: |
          echo "üìä Checking for missing migrations..."
          cd src
          python manage.py makemigrations --check --dry-run --settings=core.settings.test

      - name: Run tests with coverage
        run: |
          echo "üß™ Running tests with coverage..."
          cd src
          pytest --cov=. --cov-report=xml --cov-report=term-missing

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: github.event_name == 'push'
        with:
          file: ./src/coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: Upload Bandit security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-security-report
          path: bandit-report.json

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Run pre-commit hooks
        run: |
          echo "üîó Running pre-commit hooks..."
          pre-commit run --all-files