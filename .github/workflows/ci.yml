name: CI - Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build test image
        run: |
          docker build -t infiora-backend-test .

      - name: Run security checks
        run: |
          docker run --rm \
            -e SECRET_KEY=test-key-$(date +%s) \
            -e DJANGO_SETTINGS_MODULE=core.settings.test \
            --entrypoint python \
            infiora-backend-test src/manage.py check --tag=security

      - name: Test static files collection
        run: |
          docker run --rm \
            -e SECRET_KEY=test-key-$(date +%s) \
            -e DJANGO_SETTINGS_MODULE=core.settings.test \
            --entrypoint python \
            infiora-backend-test src/manage.py collectstatic --noinput --dry-run

      - name: Test deployment configuration
        run: |
          docker run --rm \
            -e SECRET_KEY=test-key-$(date +%s) \
            -e DJANGO_SETTINGS_MODULE=core.settings.prod \
            -e ALLOWED_HOSTS=localhost,127.0.0.1 \
            --entrypoint python \
            infiora-backend-test src/manage.py check --deploy --tag=security

      - name: Test application startup (without database)
        run: |
          # Test that the application can import settings and basic modules
          docker run --rm \
            -e SECRET_KEY=test-key-$(date +%s) \
            -e DJANGO_SETTINGS_MODULE=core.settings.test \
            -w /app/src \
            --entrypoint python \
            infiora-backend-test -c "import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings.test'); import django; django.setup(); from core.views import health_check, metrics; print('âœ… Application modules imported successfully')"
