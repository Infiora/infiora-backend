{
	"info": {
		"_postman_id": "infiora-api-collection-v1",
		"name": "Infiora API Collection",
		"description": "Complete API collection for Infiora Backend with Authentication, User Management, and Hotel Management endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api/v1",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.access) {",
									"        pm.collectionVariables.set('access_token', response.access);",
									"    }",
									"    if (response.refresh) {",
									"        pm.collectionVariables.set('refresh_token', response.refresh);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"SecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register/",
							"host": ["{{base_url}}"],
							"path": ["auth", "register", ""]
						},
						"description": "Register a new user account"
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    // Handle new structured response",
									"    if (response.tokens) {",
									"        if (response.tokens.access) {",
									"            pm.collectionVariables.set('access_token', response.tokens.access);",
									"        }",
									"        if (response.tokens.refresh) {",
									"            pm.collectionVariables.set('refresh_token', response.tokens.refresh);",
									"        }",
									"    }",
									"    // Backward compatibility",
									"    if (response.access) {",
									"        pm.collectionVariables.set('access_token', response.access);",
									"    }",
									"    if (response.refresh) {",
									"        pm.collectionVariables.set('refresh_token', response.refresh);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"testuser\",\n    \"password\": \"SecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login/",
							"host": ["{{base_url}}"],
							"path": ["auth", "login", ""]
						},
						"description": "Login with username/email and password"
					}
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    // Handle new structured response",
									"    if (response.access_token) {",
									"        pm.collectionVariables.set('access_token', response.access_token);",
									"    }",
									"    if (response.refresh_token) {",
									"        pm.collectionVariables.set('refresh_token', response.refresh_token);",
									"    }",
									"    // Backward compatibility",
									"    if (response.access) {",
									"        pm.collectionVariables.set('access_token', response.access);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh-token/",
							"host": ["{{base_url}}"],
							"path": ["auth", "refresh-token", ""]
						},
						"description": "Refresh access token using refresh token"
					}
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/logout/",
							"host": ["{{base_url}}"],
							"path": ["auth", "logout", ""]
						},
						"description": "Logout user and blacklist refresh token"
					}
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/user/",
							"host": ["{{base_url}}"],
							"path": ["auth", "user", ""]
						},
						"description": "Get current user's profile information"
					}
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/user/",
							"host": ["{{base_url}}"],
							"path": ["auth", "user", ""]
						},
						"description": "Update current user's profile information"
					}
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/forgot-password/",
							"host": ["{{base_url}}"],
							"path": ["auth", "forgot-password", ""]
						},
						"description": "Request password reset email"
					}
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"reset-token-here\",\n    \"password\": \"NewSecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/reset-password/",
							"host": ["{{base_url}}"],
							"path": ["auth", "reset-password", ""]
						},
						"description": "Reset password using token from email"
					}
				},
				{
					"name": "Send Verification Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/send-verification-email/",
							"host": ["{{base_url}}"],
							"path": ["auth", "send-verification-email", ""]
						},
						"description": "Send email verification link"
					}
				},
				{
					"name": "Verify Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"verification-token-here\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/verify-email/",
							"host": ["{{base_url}}"],
							"path": ["auth", "verify-email", ""]
						},
						"description": "Verify email using token from email"
					}
				}
			],
			"description": "Authentication endpoints for user registration, login, logout, and account management"
		},
		{
			"name": "üë• User Management",
			"item": [
				{
					"name": "List Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/?page=1&page_size=20",
							"host": ["{{base_url}}"],
							"path": ["users", ""],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "20"
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								},
								{
									"key": "is_active",
									"value": "",
									"disabled": true
								},
								{
									"key": "is_staff",
									"value": "",
									"disabled": true
								},
								{
									"key": "created_by",
									"value": "",
									"disabled": true
								},
								{
									"key": "ordering",
									"value": "-date_joined",
									"disabled": true
								}
							]
						},
						"description": "List all users with filtering and pagination (Admin/Manager only)"
					}
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newuser\",\n    \"email\": \"newuser@example.com\",\n    \"password\": \"SecurePassword123!\",\n    \"first_name\": \"New\",\n    \"last_name\": \"User\",\n    \"is_active\": true,\n    \"is_staff\": false,\n    \"is_superuser\": false,\n    \"hotels\": []\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/",
							"host": ["{{base_url}}"],
							"path": ["users", ""]
						},
						"description": "Create a new user (Staff only)"
					}
				},
				{
					"name": "Get User Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/:user_id/",
							"host": ["{{base_url}}"],
							"path": ["users", ":user_id", ""],
							"variable": [
								{
									"key": "user_id",
									"value": "1"
								}
							]
						},
						"description": "Get detailed information about a specific user"
					}
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"updateduser\",\n    \"email\": \"updated@example.com\",\n    \"first_name\": \"Updated\",\n    \"last_name\": \"User\",\n    \"is_active\": true,\n    \"is_staff\": false,\n    \"is_superuser\": false,\n    \"hotels\": []\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/:user_id/",
							"host": ["{{base_url}}"],
							"path": ["users", ":user_id", ""],
							"variable": [
								{
									"key": "user_id",
									"value": "1"
								}
							]
						},
						"description": "Update all user information (Admin only)"
					}
				},
				{
					"name": "Partial Update User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Updated First Name\",\n    \"is_active\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/:user_id/",
							"host": ["{{base_url}}"],
							"path": ["users", ":user_id", ""],
							"variable": [
								{
									"key": "user_id",
									"value": "1"
								}
							]
						},
						"description": "Partially update user information (Admin only)"
					}
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/:user_id/",
							"host": ["{{base_url}}"],
							"path": ["users", ":user_id", ""],
							"variable": [
								{
									"key": "user_id",
									"value": "1"
								}
							]
						},
						"description": "Delete a user account (Admin only)"
					}
				}
			],
			"description": "User management endpoints for admin operations (hierarchical access control)"
		},
		{
			"name": "üè® Hotel Management",
			"item": [
				{
					"name": "List Hotels",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/hotels/?page=1&page_size=20",
							"host": ["{{base_url}}"],
							"path": ["hotels", ""],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "20"
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								},
								{
									"key": "is_active",
									"value": "",
									"disabled": true
								},
								{
									"key": "created_by",
									"value": "",
									"disabled": true
								},
								{
									"key": "user",
									"value": "",
									"disabled": true,
									"description": "Filter hotels by user ID (Admin only)"
								},
								{
									"key": "ordering",
									"value": "-created_at",
									"disabled": true
								}
							]
						},
						"description": "List hotels (Admin sees all, Staff see created + belonging, Users see belonging). Admin users can filter by specific user ID."
					}
				},
				{
					"name": "List Hotels by User (Admin Only)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/hotels/?user=2&page=1&page_size=20",
							"host": ["{{base_url}}"],
							"path": ["hotels", ""],
							"query": [
								{
									"key": "user",
									"value": "2",
									"description": "Filter hotels by specific user ID"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "20"
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								},
								{
									"key": "is_active",
									"value": "",
									"disabled": true
								},
								{
									"key": "created_by",
									"value": "",
									"disabled": true
								},
								{
									"key": "ordering",
									"value": "-created_at",
									"disabled": true
								}
							]
						},
						"description": "Filter hotels by specific user ID. Returns hotels that the specified user belongs to. This parameter is only available to Admin users (superuser + staff). Staff and regular users will see hotels based on their normal permissions regardless of this parameter."
					}
				},
				{
					"name": "Create Hotel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Grand Hotel\",\n    \"description\": \"A luxury hotel in the heart of the city\",\n    \"address\": \"123 Main Street, City, Country\",\n    \"phone\": \"+1-234-567-8900\",\n    \"email\": \"contact@grandhotel.com\",\n    \"website\": \"https://grandhotel.com\",\n    \"note\": \"VIP hotel - handle with care\",\n    \"active_until\": \"2025-12-31T23:59:59Z\",\n    \"social_links\": {\n        \"facebook\": \"https://facebook.com/grandhotel\",\n        \"instagram\": \"https://instagram.com/grandhotel\",\n        \"twitter\": \"https://twitter.com/grandhotel\"\n    },\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/hotels/",
							"host": ["{{base_url}}"],
							"path": ["hotels", ""]
						},
						"description": "Create a new hotel (Staff only)"
					}
				},
				{
					"name": "Get Hotel Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/hotels/:hotel_id/",
							"host": ["{{base_url}}"],
							"path": ["hotels", ":hotel_id", ""],
							"variable": [
								{
									"key": "hotel_id",
									"value": "1"
								}
							]
						},
						"description": "Get detailed information about a specific hotel"
					}
				},
				{
					"name": "Update Hotel",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Grand Hotel\",\n    \"description\": \"An updated luxury hotel description\",\n    \"address\": \"456 Updated Street, New City, Country\",\n    \"phone\": \"+1-234-567-8901\",\n    \"email\": \"updated@grandhotel.com\",\n    \"website\": \"https://updatedgrandhotel.com\",\n    \"note\": \"Updated VIP hotel notes\",\n    \"active_until\": \"2026-12-31T23:59:59Z\",\n    \"social_links\": {\n        \"facebook\": \"https://facebook.com/updatedgrandhotel\",\n        \"instagram\": \"https://instagram.com/updatedgrandhotel\",\n        \"linkedin\": \"https://linkedin.com/company/updatedgrandhotel\"\n    },\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/hotels/:hotel_id/",
							"host": ["{{base_url}}"],
							"path": ["hotels", ":hotel_id", ""],
							"variable": [
								{
									"key": "hotel_id",
									"value": "1"
								}
							]
						},
						"description": "Update all hotel information"
					}
				},
				{
					"name": "Partial Update Hotel",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Partially Updated Hotel Name\",\n    \"is_active\": false,\n    \"social_links\": {\n        \"tiktok\": \"https://tiktok.com/@grandhotel\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/hotels/:hotel_id/",
							"host": ["{{base_url}}"],
							"path": ["hotels", ":hotel_id", ""],
							"variable": [
								{
									"key": "hotel_id",
									"value": "1"
								}
							]
						},
						"description": "Partially update hotel information"
					}
				},
				{
					"name": "Delete Hotel",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/hotels/:hotel_id/",
							"host": ["{{base_url}}"],
							"path": ["hotels", ":hotel_id", ""],
							"variable": [
								{
									"key": "hotel_id",
									"value": "1"
								}
							]
						},
						"description": "Delete a hotel (Admin or creator only)"
					}
				},
				{
					"name": "Upload Hotel Image",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/hotels/:hotel_id/",
							"host": ["{{base_url}}"],
							"path": ["hotels", ":hotel_id", ""],
							"variable": [
								{
									"key": "hotel_id",
									"value": "1"
								}
							]
						},
						"description": "Upload hotel logo/main image"
					}
				},
				{
					"name": "Upload Hotel Cover",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cover",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/hotels/:hotel_id/",
							"host": ["{{base_url}}"],
							"path": ["hotels", ":hotel_id", ""],
							"variable": [
								{
									"key": "hotel_id",
									"value": "1"
								}
							]
						},
						"description": "Upload hotel cover image"
					}
				}
			],
			"description": "Hotel management endpoints with multi-hotel user support and hierarchical access control"
		}
	]
}